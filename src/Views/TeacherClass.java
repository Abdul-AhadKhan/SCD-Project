package Views;

import Controllers.StudentController;
import Controllers.TeacherController;
import Models.RoundedBorder;
import Models.ScrollPaneWin11;

import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.*;


public class TeacherClass extends JFrame {


    public TeacherClass(String className, String teacherName) throws SQLException, ClassNotFoundException {
        this.cName = className;
        this.tName = teacherName;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() throws SQLException, ClassNotFoundException {

        jPanel1 = new JPanel();
        className = new JLabel();
        teacherName = new JLabel();
        jPanel2 = new JPanel();
        Option1Panel = new JPanel();
        Option1 = new JLabel();
        Option2Panel = new JPanel();
        Option2 = new JLabel();
        Option3Panel = new JPanel();
        Option3 = new JLabel();
        Option4Panel = new JPanel();
        Option4 = new JLabel();
        jScrollPane3 = new ScrollPaneWin11();
        jPanel4 = new JPanel();

        teacherController = new TeacherController();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Classroom");
        setBackground(new Color(255, 255, 255));

        jPanel1.setBackground(new Color(148,11,146));

        className.setFont(new Font("Times New Roman", 1, 24)); // NOI18N
        className.setForeground(new Color(255, 255, 255));
        className.setText(cName);

        teacherName.setFont(new Font("Times New Roman", 0, 12)); // NOI18N
        teacherName.setForeground(new Color(255, 255, 255));
        teacherName.setText(tName);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(className, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(teacherName, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(className, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(teacherName)
                                .addGap(14, 14, 14))
        );

        jPanel2.setBackground(new Color(255, 255, 255));

        Option1Panel.setBackground(new Color(255, 255, 255));
        Option1Panel.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        Option1Panel.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                try {
                    Option1PanelMouseClicked(evt);
                } catch (SQLException | ClassNotFoundException e) {
                    throw new RuntimeException(e);
                }
            }
            public void mouseEntered(MouseEvent evt) {
                Option1PanelMouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                Option1PanelMouseExited(evt);
            }
        });

        Option1.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        Option1.setText("Upload Lecture");

        GroupLayout Option1PanelLayout = new GroupLayout(Option1Panel);
        Option1Panel.setLayout(Option1PanelLayout);
        Option1PanelLayout.setHorizontalGroup(
                Option1PanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, Option1PanelLayout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Option1)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Option1PanelLayout.setVerticalGroup(
                Option1PanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(Option1PanelLayout.createSequentialGroup()
                                .addContainerGap(12, Short.MAX_VALUE)
                                .addComponent(Option1, GroupLayout.PREFERRED_SIZE, 17, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(12, Short.MAX_VALUE))
        );

        Option2Panel.setBackground(new Color(255, 255, 255));
        Option2Panel.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                try {
                    Option2PanelMouseClicked(evt);
                } catch (SQLException | ClassNotFoundException e) {
                    throw new RuntimeException(e);
                }
            }
            public void mouseEntered(MouseEvent evt) {
                Option2PanelMouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                Option2PanelMouseExited(evt);
            }
        });

        Option2.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        Option2.setText("Upload Quiz");
        Option2.setHorizontalTextPosition(SwingConstants.CENTER);

        GroupLayout Option2PanelLayout = new GroupLayout(Option2Panel);
        Option2Panel.setLayout(Option2PanelLayout);
        Option2PanelLayout.setHorizontalGroup(
                Option2PanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, Option2PanelLayout.createSequentialGroup()
                                .addContainerGap(59, Short.MAX_VALUE)
                                .addComponent(Option2, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(56, Short.MAX_VALUE))
        );
        Option2PanelLayout.setVerticalGroup(
                Option2PanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(Option2PanelLayout.createSequentialGroup()
                                .addContainerGap(12, Short.MAX_VALUE)
                                .addComponent(Option2)
                                .addContainerGap(18, Short.MAX_VALUE))
        );

        Option3Panel.setBackground(new Color(255, 255, 255));
        Option3Panel.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                try {
                    Option3PanelMouseClicked(evt);
                } catch (SQLException | ClassNotFoundException e) {
                    throw new RuntimeException(e);
                }
            }
            public void mouseEntered(MouseEvent evt) {
                Option3PanelMouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                Option3PanelMouseExited(evt);
            }
        });

        Option3.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        Option3.setText("See Insights");
        Option3.setHorizontalTextPosition(SwingConstants.LEFT);

        GroupLayout Option3PanelLayout = new GroupLayout(Option3Panel);
        Option3Panel.setLayout(Option3PanelLayout);
        Option3PanelLayout.setHorizontalGroup(
                Option3PanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, Option3PanelLayout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Option3)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Option3PanelLayout.setVerticalGroup(
                Option3PanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(Option3PanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Option3)
                                .addContainerGap(12, Short.MAX_VALUE))
        );

        Option4Panel.setBackground(new Color(255, 255, 255));
        Option4Panel.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                try {
                    Option4PanelMouseClicked(evt);
                } catch (SQLException | ClassNotFoundException e) {
                    throw new RuntimeException(e);
                }
            }
            public void mouseEntered(MouseEvent evt) {
                Option4PanelMouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                Option4PanelMouseExited(evt);
            }
        });

        Option4.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        Option4.setText("Delete Classroom");
        Option4.setHorizontalTextPosition(SwingConstants.CENTER);

        GroupLayout Option4PanelLayout = new GroupLayout(Option4Panel);
        Option4Panel.setLayout(Option4PanelLayout);
        Option4PanelLayout.setHorizontalGroup(
                Option4PanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, Option4PanelLayout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Option4)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Option4PanelLayout.setVerticalGroup(
                Option4PanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(Option4PanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Option4)
                                .addContainerGap(12, Short.MAX_VALUE))
        );

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Option1Panel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Option2Panel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Option3Panel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Option4Panel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(Option1Panel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(Option2Panel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(Option3Panel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(Option4Panel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        jPanel4.setBackground(new Color(255, 255, 255));
        jPanel4.setMaximumSize(new Dimension(32767, 32767));
        jPanel4.setMinimumSize(new Dimension(763, 521));
        jPanel4.setPreferredSize(new Dimension(763, 521));
        jPanel4.setLayout(new BoxLayout(jPanel4, BoxLayout.Y_AXIS));


        jScrollPane3.setViewportView(jPanel4);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3)
                                .addContainerGap())
        );

        HashMap<String,String> lectures = teacherController.getLectures(cName);

        if (lectures.size() >= 1) {

            jPanel4.setLayout(new BoxLayout(jPanel4, BoxLayout.PAGE_AXIS));

            for (String lectureTitle : lectures.keySet()) {

                JPanel panel = new JPanel();
                panel.setBackground(Color.WHITE);
                panel.setBorder(new RoundedBorder(10));

                JLabel title = new JLabel(lectureTitle);
                title.setFont(new Font("Times New Roman", 0, 14));
                title.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        try {
                            VideoPlayer player = new VideoPlayer(title.getText().trim(), className.getText().trim());
                            player.setVisible(true);
                        } catch (SQLException | IOException | ClassNotFoundException ex) {
                            throw new RuntimeException(ex);
                        }
                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {
                        title.setForeground(new Color(91, 8, 136));
                        title.setFont(new Font("Times New Roman", 1, 14));
                    }

                    @Override
                    public void mouseExited(MouseEvent e) {
                        title.setForeground(Color.BLACK);
                        title.setFont(new Font("Times New Roman", 0, 14));
                    }
                });


                JLabel play = new JLabel();
                play.setFont(new Font("Times New Roman", 0, 14));
                play.setIcon(new ImageIcon(getClass().getResource("/com/scd/finalproject/icons/icons8-play-30 (1).png")));
                play.setText("Play");
                play.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        VideoPlayer player = null;
                        try {
                            player = new VideoPlayer(title.getText().trim(), className.getText().trim());
                        } catch (SQLException | IOException | ClassNotFoundException ex) {
                            throw new RuntimeException(ex);
                        }
                        player.setVisible(true);
                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {
                        play.setForeground(new Color(91, 8, 136));
                        play.setFont(new Font("Times New Roman", 1, 14));
                    }

                    @Override
                    public void mouseExited(MouseEvent e) {
                        play.setForeground(Color.BLACK);
                        play.setFont(new Font("Times New Roman", 0, 14));
                    }
                });

                JLabel comment = new JLabel();
                comment.setFont(new Font("Times New Roman", 0, 14));
                comment.setIcon(new ImageIcon(getClass().getResource("/com/scd/finalproject/icons/icons8-comment-30.png"))); // NOI18N
                comment.setText("Comment");
                comment.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {

                        try {
                            TeacherComments teacherComments = new TeacherComments(lectureTitle, cName);
                            teacherComments.setVisible(true);
                            teacherComments.setLocationRelativeTo(null);
                        } catch (SQLException | ClassNotFoundException ex) {
                            throw new RuntimeException(ex);
                        }

                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {
                        comment.setForeground(new Color(91, 8, 136));
                        comment.setFont(new Font("Times New Roman", 1, 14));
                    }

                    @Override
                    public void mouseExited(MouseEvent e) {
                        comment.setForeground(Color.BLACK);
                        comment.setFont(new Font("Times New Roman", 0, 14));
                    }
                });


                JTextArea area = new JTextArea();
                area.setEditable(false);
                area.setColumns(20);
                area.setLineWrap(true);
                area.setRows(5);
                area.setCaretColor(new Color(255, 255, 255));
                area.setText(lectures.get(lectureTitle));

                JSeparator separator = new JSeparator();

                JScrollPane scrollPane = new JScrollPane(area);

                GroupLayout jPanel3Layout = new GroupLayout(panel);
                panel.setLayout(jPanel3Layout);
                jPanel3Layout.setHorizontalGroup(
                        jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel3Layout.createSequentialGroup()
                                                        .addComponent(title, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(play, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(comment)
                                                        .addGap(22, 22, 22))
                                                .addGroup(jPanel3Layout.createSequentialGroup()
                                                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                                .addComponent(scrollPane, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                                                                .addComponent(separator, GroupLayout.Alignment.LEADING))
                                                        .addGap(14, 14, 14))))
                );
                jPanel3Layout.setVerticalGroup(
                        jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                .addComponent(title)
                                                .addComponent(play)
                                                .addComponent(comment))
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(separator, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(scrollPane, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22))
                );

                jPanel4.add(Box.createVerticalStrut(10));
                panel.setMaximumSize(new Dimension(jPanel4.getMaximumSize().width, 190));
                jPanel4.add(panel);

            }
        }

        pack();
    }// </editor-fold>

    private void Option1PanelMouseEntered(MouseEvent evt) {
        Option1Panel.setBackground(new Color(148,11,146));
        Option1.setForeground(Color.WHITE);
    }

    private void Option1PanelMouseExited(MouseEvent evt) {
        Option1Panel.setBackground(Color.WHITE);
        Option1.setForeground(Color.BLACK);
    }

    private void Option1PanelMouseClicked(MouseEvent evt) throws SQLException, ClassNotFoundException {

        UploadLecture uploadLecture = new UploadLecture(cName);
        uploadLecture.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                dispose();
                try {
                    TeacherClass teacherClass = new TeacherClass(cName, tName);
                    teacherClass.setVisible(true);
                } catch (SQLException | ClassNotFoundException ex) {
                    throw new RuntimeException(ex);
                }

            }
        });
        uploadLecture.setVisible(true);

    }

    private void Option2PanelMouseClicked(MouseEvent evt) throws SQLException, ClassNotFoundException {

        UploadQuiz uploadQuiz = new UploadQuiz(cName);
        uploadQuiz.setVisible(true);
    }

    private void Option2PanelMouseEntered(MouseEvent evt) {
        Option2Panel.setBackground(new Color(148,11,146));
        Option2.setForeground(Color.WHITE);
    }

    private void Option2PanelMouseExited(MouseEvent evt) {
        Option2Panel.setBackground(Color.WHITE);
        Option2.setForeground(Color.BLACK);
    }

    private void Option3PanelMouseEntered(MouseEvent evt) {
        Option3Panel.setBackground(new Color(148,11,146));
        Option3.setForeground(Color.WHITE);
    }

    private void Option3PanelMouseExited(MouseEvent evt) {
        Option3Panel.setBackground(Color.WHITE);
        Option3.setForeground(Color.BLACK);
    }

    private void Option3PanelMouseClicked(MouseEvent evt) throws SQLException, ClassNotFoundException {

        Insights insights = new Insights(cName);

    }

    private void Option4PanelMouseEntered(MouseEvent evt) {
        Option4Panel.setBackground(new Color(148,11,146));
        Option4.setForeground(Color.WHITE);
    }

    private void Option4PanelMouseClicked(MouseEvent evt) throws SQLException, ClassNotFoundException {
        int result = JOptionPane.showConfirmDialog(null, "Do You Want To Delete This Class", "Question", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION){
            if (teacherController.deleteClassroom(cName))
            {
                JOptionPane.showConfirmDialog(null, "Class Deleted Successfully", "Success", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
        }

    }

    private void Option4PanelMouseExited(MouseEvent evt) {
        Option4Panel.setBackground(Color.WHITE);
        Option4.setForeground(Color.BLACK);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TeacherClass("SDA", "Hammad").setVisible(true);
                } catch (SQLException | ClassNotFoundException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify
    private JLabel Option1;
    private JPanel Option1Panel;
    private JLabel Option2;
    private JPanel Option2Panel;
    private JLabel Option3;
    private JPanel Option3Panel;
    private JLabel Option4;
    private JPanel Option4Panel;
    private JLabel className;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel4;
    private JScrollPane jScrollPane3;
    private JLabel teacherName;
    private String tName;
    private String cName;
    private TeacherController teacherController;
    // End of variables declaration
}
